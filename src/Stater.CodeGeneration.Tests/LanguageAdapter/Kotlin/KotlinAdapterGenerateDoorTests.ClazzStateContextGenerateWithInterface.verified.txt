package fsm.door

import com.stater.statemachine.kotlin.*

enum class States {
    OPEN,
    AJAR,
    CLOSE
}

data class DoorFSMContext(
    var degreeOfOpening: Int = 0,
    var closeVariable: Boolean = true,
    var doorName: String = "asd",
    var floatVariable: Float = 0f
) : Context

class DoorStateMachine : StaterStateMachine<States, DoorFSMContext>(
    transitions = listOf(
        Transition(
            name = "preOpen",
            start = States.CLOSE,
            end = States.AJAR,
            event = { it.degreeOfOpening = 1 }
        ),
        Transition(
            name = "preClose",
            start = States.OPEN,
            end = States.AJAR,
            event = { it.degreeOfOpening = 99 }
        ),
        Transition(
            name = "open",
            start = States.AJAR,
            end = States.OPEN,
            condition = { it.degreeOfOpening >= 0 },
            event = { it.degreeOfOpening = 100 }
        ),
        Transition(
            name = "close",
            start = States.AJAR,
            end = States.CLOSE,
            condition = { it.degreeOfOpening <= 0 },
            event = { it.degreeOfOpening = 0 }
        ),
        Transition(
            name = "ajarPlus",
            start = States.AJAR,
            end = States.AJAR,
            event = { it.degreeOfOpening = it.degreeOfOpening + 1 }
        ),
        Transition(
            name = "ajarMinus",
            start = States.AJAR,
            end = States.AJAR,
            event = { it.degreeOfOpening = it.degreeOfOpening - 1 }
        )
    ),
    startState = States.OPEN,
    context = DoorFSMContext()
) {
    fun preOpen() = transition("preOpen")
    fun preClose() = transition("preClose")
    fun open() = transition("open")
    fun close() = transition("close")
    fun ajarPlus() = transition("ajarPlus")
    fun ajarMinus() = transition("ajarMinus")
}