package fsm.door

import com.stater.statemachine.kotlin.*

data class DoorFSMContext(
    var degreeOfOpening: Int = 0,
    var closeVariable: Boolean = true,
    var doorName: String = "asd",
    var floatVariable: Float = 0f
) : Context

class TypesDoorStateMachine(
    transitions: List<Transition<String, DoorFSMContext>>,
    startState: String,
    states: Set<String>,
    context: DoorFSMContext,
    transitionMiddlewares: Map<String, List<TransitionMiddleware<DoorFSMContext>>> = mapOf(),
    transitionAllMiddlewares: List<TransitionNameMiddleware<DoorFSMContext>> = listOf(),
    transitionCallbacks: Map<String, List<Event<DoorFSMContext>>> = mapOf(),
    transitionAllCallbacks: List<NameEvent<DoorFSMContext>> = listOf(),
    stateCallbacks: Map<String, List<Event<DoorFSMContext>>> = mapOf(),
    stateAllCallbacks: List<StateEvent<String, DoorFSMContext>> = listOf(),
    contextJsonAdapter: ContextJsonAdapter<DoorFSMContext>? = null,
) : StaterStateMachine<String, DoorFSMContext>(
    transitions = transitions,
    startState = startState,
    states = states,
    context = context,
    transitionMiddlewares = transitionMiddlewares,
    transitionAllMiddlewares = transitionAllMiddlewares,
    transitionCallbacks = transitionCallbacks,
    transitionAllCallbacks = transitionAllCallbacks,
    stateCallbacks = stateCallbacks,
    stateAllCallbacks = stateAllCallbacks,
    contextJsonAdapter = contextJsonAdapter
) {
    fun preOpen() = transition("preOpen")
    fun preClose() = transition("preClose")
    fun open() = transition("open")
    fun close() = transition("close")
    fun ajarPlus() = transition("ajarPlus")
    fun ajarMinus() = transition("ajarMinus")
}

private val typedDoorFactory: StateMachineFactory<String, DoorFSMContext> = {
        transitionsA,
        contextA,
        startStateA,
        statesA,
        transitionMiddlewaresA,
        transitionAllMiddlewaresA,
        transitionCallbacksA,
        transitionAllCallbacksA,
        stateCallbacksA,
        stateAllCallbacksA,
        contextJsonAdapterA,
    ->
    TypesDoorStateMachine(
        transitions = transitionsA,
        context = contextA,
        startState = startStateA,
        states = statesA,
        transitionMiddlewares = transitionMiddlewaresA,
        transitionAllMiddlewares = transitionAllMiddlewaresA,
        transitionCallbacks = transitionCallbacksA,
        transitionAllCallbacks = transitionAllCallbacksA,
        stateCallbacks = stateCallbacksA,
        stateAllCallbacks = stateAllCallbacksA,
        contextJsonAdapter = contextJsonAdapterA
    )
}

val builderDoorStateMachine = StaterStateMachineBuilder<String, DoorFSMContext>()
    .setStartState("OPEN")
    .setContext(DoorFSMContext())
    .setFactory(typedDoorFactory)
    .addTransition("preOpen", "CLOSE", "AJAR")
    .setTransitionEvent("preOpen") { it.degreeOfOpening = 1 }
    .addTransition("preClose", "OPEN", "AJAR")
    .setTransitionEvent("preClose") { it.degreeOfOpening = 99 }
    .addTransition("open", "AJAR", "OPEN")
    .setTransitionCondition("open") { it.degreeOfOpening >= 0 }
    .setTransitionEvent("open") { it.degreeOfOpening = 100 }
    .addTransition("close", "AJAR", "CLOSE")
    .setTransitionCondition("close") { it.degreeOfOpening <= 0 }
    .setTransitionEvent("close") { it.degreeOfOpening = 0 }
    .addTransition("ajarPlus", "AJAR", "AJAR")
    .setTransitionEvent("ajarPlus") { it.degreeOfOpening = it.degreeOfOpening + 1 }
    .addTransition("ajarMinus", "AJAR", "AJAR")
    .setTransitionEvent("ajarMinus") { it.degreeOfOpening = it.degreeOfOpening - 1 }