namespace fsm.door;

using Stater.StateMachine.Lib;

public class Door {
    public class TypesDoorStateMachine(
        List<Transition<String, EmptyContext>> transitions,
        EmptyContext context,
        String startState,
        HashSet<String> states,
        Dictionary<String, List<TransitionMiddleware<EmptyContext>>> transitionMiddlewares,
        List<TransitionNameMiddleware<EmptyContext>> transitionAllMiddlewares,
        Dictionary<String, List<Event<EmptyContext>>> transitionCallbacks,
        List<NameEvent<EmptyContext>> transitionAllCallbacks,
        Dictionary<String, List<Event<EmptyContext>>> stateCallbacks,
        List<StateEvent<String, EmptyContext>> stateAllCallbacks,
        IContextJsonAdapter<EmptyContext> contextJsonAdapter
    ) : StaterStateMachine<String, EmptyContext>(
        transitions,
        context,
        startState,
        states,
        transitionMiddlewares,
        transitionAllMiddlewares,
        transitionCallbacks,
        transitionAllCallbacks,
        stateCallbacks,
        stateAllCallbacks,
        contextJsonAdapter
    )
    {
        public void preOpen() 
        {
            Transition("preOpen");
        }

        public void preClose() 
        {
            Transition("preClose");
        }

        public void open() 
        {
            Transition("open");
        }

        public void close() 
        {
            Transition("close");
        }

        public void ajarPlus() 
        {
            Transition("ajarPlus");
        }

        public void ajarMinus() 
        {
            Transition("ajarMinus");
        }
    }
    private static StateMachineFactory<String, EmptyContext> TypedDoorFactory = (
        transitionsA,
        contextA,
        startStateA,
        statesA,
        transitionMiddlewaresA,
        transitionAllMiddlewaresA,
        transitionCallbacksA,
        transitionAllCallbacksA,
        stateCallbacksA,
        stateAllCallbacksA,
        contextJsonAdapterA
    ) => new TypesDoorStateMachine(
        transitionsA,
        contextA,
        startStateA,
        statesA,
        transitionMiddlewaresA,
        transitionAllMiddlewaresA,
        transitionCallbacksA,
        transitionAllCallbacksA,
        stateCallbacksA,
        stateAllCallbacksA,
        contextJsonAdapterA
    );


    public static StaterStateMachineBuilder<String, EmptyContext> BuilderDoorStateMachine = new StaterStateMachineBuilder<String, EmptyContext>()
        .SetStartState("OPEN")
        .SetContext(new EmptyContext())
        .SetFactory(TypedDoorFactory)
        .AddTransition("preOpen", "CLOSE", "AJAR")
        .AddTransition("preClose", "OPEN", "AJAR")
        .AddTransition("open", "AJAR", "OPEN")
        .AddTransition("close", "AJAR", "CLOSE")
        .AddTransition("ajarPlus", "AJAR", "AJAR")
        .AddTransition("ajarMinus", "AJAR", "AJAR");
}