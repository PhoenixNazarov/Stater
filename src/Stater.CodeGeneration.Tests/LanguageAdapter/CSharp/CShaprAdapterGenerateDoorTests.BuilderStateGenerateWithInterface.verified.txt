namespace fsm.door;

using Stater.StateMachine.Lib;

public enum States {
    OPEN,
    AJAR,
    CLOSE
}

public class Door {
    public class TypesDoorStateMachine(
        List<Transition<States, EmptyContext>> transitions,
        EmptyContext context,
        States startState,
        HashSet<States> states,
        Dictionary<String, List<TransitionMiddleware<EmptyContext>>> transitionMiddlewares,
        List<TransitionNameMiddleware<EmptyContext>> transitionAllMiddlewares,
        Dictionary<String, List<Event<EmptyContext>>> transitionCallbacks,
        List<NameEvent<EmptyContext>> transitionAllCallbacks,
        Dictionary<States, List<Event<EmptyContext>>> stateCallbacks,
        List<StateEvent<States, EmptyContext>> stateAllCallbacks,
        IContextJsonAdapter<EmptyContext> contextJsonAdapter
    ) : StaterStateMachine<States, EmptyContext>(
        transitions,
        context,
        startState,
        states,
        transitionMiddlewares,
        transitionAllMiddlewares,
        transitionCallbacks,
        transitionAllCallbacks,
        stateCallbacks,
        stateAllCallbacks,
        contextJsonAdapter
    )
    {
        public void preOpen() 
        {
            Transition("preOpen");
        }

        public void preClose() 
        {
            Transition("preClose");
        }

        public void open() 
        {
            Transition("open");
        }

        public void close() 
        {
            Transition("close");
        }

        public void ajarPlus() 
        {
            Transition("ajarPlus");
        }

        public void ajarMinus() 
        {
            Transition("ajarMinus");
        }
    }
    private static StateMachineFactory<States, EmptyContext> TypedDoorFactory = (
        transitionsA,
        contextA,
        startStateA,
        statesA,
        transitionMiddlewaresA,
        transitionAllMiddlewaresA,
        transitionCallbacksA,
        transitionAllCallbacksA,
        stateCallbacksA,
        stateAllCallbacksA,
        contextJsonAdapterA
    ) => new TypesDoorStateMachine(
        transitionsA,
        contextA,
        startStateA,
        statesA,
        transitionMiddlewaresA,
        transitionAllMiddlewaresA,
        transitionCallbacksA,
        transitionAllCallbacksA,
        stateCallbacksA,
        stateAllCallbacksA,
        contextJsonAdapterA
    );


    public static StaterStateMachineBuilder<States, EmptyContext> BuilderDoorStateMachine = new StaterStateMachineBuilder<States, EmptyContext>()
        .SetStartState(States.OPEN)
        .SetContext(new EmptyContext())
        .SetFactory(TypedDoorFactory)
        .AddTransition("preOpen", States.CLOSE, States.AJAR)
        .AddTransition("preClose", States.OPEN, States.AJAR)
        .AddTransition("open", States.AJAR, States.OPEN)
        .AddTransition("close", States.AJAR, States.CLOSE)
        .AddTransition("ajarPlus", States.AJAR, States.AJAR)
        .AddTransition("ajarMinus", States.AJAR, States.AJAR);
}