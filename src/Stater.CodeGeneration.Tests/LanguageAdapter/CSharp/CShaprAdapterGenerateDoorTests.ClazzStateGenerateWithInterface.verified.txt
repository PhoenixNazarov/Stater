namespace fsm.door;

using Stater.StateMachine.Lib;

public enum States {
    OPEN,
    AJAR,
    CLOSE
}

public class DoorStateMachine() : StaterStateMachine<States, EmptyContext>(
    new List<Transition<States, EmptyContext>>
    {
        new(
            "preOpen",
            States.CLOSE,
            States.AJAR, 
            ctx => true, 
            ctx => { }
        ),
        new(
            "preClose",
            States.OPEN,
            States.AJAR, 
            ctx => true, 
            ctx => { }
        ),
        new(
            "open",
            States.AJAR,
            States.OPEN, 
            ctx => true, 
            ctx => { }
        ),
        new(
            "close",
            States.AJAR,
            States.CLOSE, 
            ctx => true, 
            ctx => { }
        ),
        new(
            "ajarPlus",
            States.AJAR,
            States.AJAR, 
            ctx => true, 
            ctx => { }
        ),
        new(
            "ajarMinus",
            States.AJAR,
            States.AJAR, 
            ctx => true, 
            ctx => { }
        )
    },
    new EmptyContext(),
    States.OPEN
)
{
    public void preOpen() 
    {
        Transition("preOpen");
    }

    public void preClose() 
    {
        Transition("preClose");
    }

    public void open() 
    {
        Transition("open");
    }

    public void close() 
    {
        Transition("close");
    }

    public void ajarPlus() 
    {
        Transition("ajarPlus");
    }

    public void ajarMinus() 
    {
        Transition("ajarMinus");
    }
}