import json

from .Door import DoorStateMachine


def test_init():
    DoorStateMachine()


def test_scenario_0():
    sm = DoorStateMachine()
    sm.disable_events()


    sm.transition('preClose')
    assert sm.get_state() == "AJAR"

    sm.transition('close')
    assert sm.get_state() == "CLOSE"

    sm.transition('preOpen')
    assert sm.get_state() == "AJAR"

    sm.transition('ajarPlus')
    assert sm.get_state() == "AJAR"

    sm.transition('open')
    assert sm.get_state() == "OPEN"


def test_scenario_1():
    sm = DoorStateMachine()
    sm.disable_events()


    sm.transition('preClose')
    assert sm.get_state() == "AJAR"

    sm.transition('ajarPlus')
    assert sm.get_state() == "AJAR"

    sm.transition('close')
    assert sm.get_state() == "CLOSE"

    sm.transition('preOpen')
    assert sm.get_state() == "AJAR"

    sm.transition('open')
    assert sm.get_state() == "OPEN"


def test_scenario_2():
    sm = DoorStateMachine()
    sm.disable_events()


    sm.transition('preClose')
    assert sm.get_state() == "AJAR"

    sm.transition('close')
    assert sm.get_state() == "CLOSE"

    sm.transition('preOpen')
    assert sm.get_state() == "AJAR"

    sm.transition('open')
    assert sm.get_state() == "OPEN"


def test_json_schema():
    sm = DoorStateMachine()
    assert json.loads("""{
  "states": [
    "AJAR",
    "CLOSE",
    "OPEN"
  ],
  "startState": "OPEN",
  "transitions": [
    {
      "name": "preOpen",
      "start": "CLOSE",
      "end": "AJAR"
    },
    {
      "name": "preClose",
      "start": "OPEN",
      "end": "AJAR"
    },
    {
      "name": "open",
      "start": "AJAR",
      "end": "OPEN"
    },
    {
      "name": "close",
      "start": "AJAR",
      "end": "CLOSE"
    },
    {
      "name": "ajarPlus",
      "start": "AJAR",
      "end": "AJAR"
    },
    {
      "name": "ajarMinus",
      "start": "AJAR",
      "end": "AJAR"
    }
  ]
}""") == json.loads(sm.to_json_schema())

