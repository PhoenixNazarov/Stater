#pragma once

#include <stater_state_machine.h>

class Door_state_machine : public stater_state_machine<std::string, empty_context> {
public:
    Door_state_machine() : stater_state_machine (
        {
            transition_t<::std::string, empty_context>(
                "preOpen",
                "CLOSE",
                "AJAR", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            ),
            transition_t<::std::string, empty_context>(
                "preClose",
                "OPEN",
                "AJAR", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            ),
            transition_t<::std::string, empty_context>(
                "open",
                "AJAR",
                "OPEN", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            ),
            transition_t<::std::string, empty_context>(
                "close",
                "AJAR",
                "CLOSE", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            ),
            transition_t<::std::string, empty_context>(
                "ajarPlus",
                "AJAR",
                "AJAR", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            ),
            transition_t<::std::string, empty_context>(
                "ajarMinus",
                "AJAR",
                "AJAR", 
                [](empty_context *ctx) { return true; }, 
                [](empty_context *ctx) { }
            )
        },
        new empty_context(),
        "OPEN"
    ) {
    }

};